expr;

parentheses_expr @ expr:
	'lparen' expr 'rparen'
;

literal_expr @ expr;

literal_sequence_expr @ literal_expr:
	'literal_sequence' @ literal
;

literal_alternative_expr @ literal_expr:
	'literal_alternative' @ literal
;

operator1_expr @ expr;

zero_or_one_expr @ operator1_expr:
	expr @ operand
	'question' @ operator_
;

zero_or_many_expr operator1_expr:
	expr @ operand
	'star' @ operator_
;

one_or_many_expr operator1_expr:
	expr @ operand
	'plus' @ operator_
;

@operator2_expr @ expr;

sequence_expr @ operator2_expr:
	expr @ lhs_operand
	expr @ rhs_operand
;

sequence_expr @ operator2_expr:
	expr @ lhs_operand
	'pipe' @ operator_
	expr @ rhs_operand
;

min_max_expr @ expr:
	'lbrace'
	'integer' @ min
	(
		'comma'
		'integer' @ max
	)?
	'rbrace'
;

attribute:
	'at'
	'identifier'
;

rule:
	attribute* @ attributes
	'identifier'
	'colon'
	expr @ definition
	'semicolon'
;
