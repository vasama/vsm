expr {}

parentheses_expr : expr
{
	token lparen;
	token rparen;
	expr expr;
}

literal_expr : expr
{
	token literal;
}

literal_sequence_expr : literal_expr {}
alternative_sequence_expr : literal_expr {}

operator1_expr : expr
{
	expr operand;
	token operator_;
}

zero_or_one_expr : operator1_expr {}
zero_or_many_expr : operator1_expr {}
one_or_many_expr : operator1_expr {}

min_max_expr : expr
{
	expr operand;
	token lbrace;
	token rbrace;
	token min;
	token comma;
	token max;
}

sequence_expr : expr
{
	expr lhs_operand;
	expr rhs_operand;
}

alternative_expr : expr
{
	token pipe;
	expr lhs_operand;
	expr rhs_operand;
}

attribute
{
	token at;
	token name;
}

rule
{
	attribute[] attributes;
	token name;
	token colon;
	expr definition;
	token semicolon;
}
