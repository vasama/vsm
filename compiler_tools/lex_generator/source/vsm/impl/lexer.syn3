expr.parentheses_expr:
	lparen
	expr
	rparen
;

expr.literal_expr.literal_sequence_expr:
	literal = literal_sequence
;

expr.literal_expr.literal_alternative_expr:
	literal = literal_alternative
;

expr.operator1_expr.zero_or_one_expr:
	operand = expr
	operator_ = question
;

expr.operator1_expr.zero_or_many_expr:
	operand = expr
	operator_ = star
;

expr.operator1_expr.one_or_many_expr:
	operand = expr
	operator_ = plus
;

expr.sequence_expr:
	lhs_operand = expr
	rhs_operand = expr
;

expr.alternative_expr:
	lhs_operand = expr
	operator_ = pipe
	rhs_operand = expr
;

attr:
	at identifier
;

rule:
	attributes = attribute*
	identifier
	colon
	definition = expr
	semicolon
;
